import tkinter as tk  
from tkinter import ttk  
import random  

class RPSGame:  
    def __init__(self, root):  
        self.root = root  
        self.root.title("Rock-Paper-Scissors Game")  
        self.root.geometry("400x400")  
        self.root.config(bg="#f4f4f9")  

        self.user_score = 0  
        self.computer_score = 0  

        # Title Label  
        title_label = tk.Label(self.root, text="Rock-Paper-Scissors", font=("Arial", 24), bg="#2c3e50", fg="white")  
        title_label.pack(pady=10)  

        # Instruction Label  
        instructions_label = tk.Label(self.root, text="Choose Rock, Paper, or Scissors:", font=("Arial", 14), bg="#f4f4f9")  
        instructions_label.pack()  

        # Buttons for user input  
        button_frame = ttk.Frame(self.root)  
        button_frame.pack(pady=20)  

        self.rock_button = ttk.Button(button_frame, text="Rock", command=lambda: self.play("rock"))  
        self.rock_button.grid(row=0, column=0, padx=10)  

        self.paper_button = ttk.Button(button_frame, text="Paper", command=lambda: self.play("paper"))  
        self.paper_button.grid(row=0, column=1, padx=10)  

        self.scissors_button = ttk.Button(button_frame, text="Scissors", command=lambda: self.play("scissors"))  
        self.scissors_button.grid(row=0, column=2, padx=10)  

        # Result Label  
        self.result_label = tk.Label(self.root, text="", font=("Arial", 14), bg="#f4f4f9")  
        self.result_label.pack(pady=20)  

        # Score Label  
        self.score_label = tk.Label(self.root, text="User Score: 0   Computer Score: 0", font=("Arial", 12), bg="#f4f4f9")  
        self.score_label.pack()  

        # Play Again Button  
        self.play_again_button = ttk.Button(self.root, text="Play Again", command=self.reset_game)  
        self.play_again_button.pack(pady=10)  

        self.play_again_button.config(state='disabled')  

    def play(self, user_choice):  
        computer_choice = random.choice(["rock", "paper", "scissors"])  
        result = self.determine_winner(user_choice, computer_choice)  

        self.result_label.config(text=f"You chose: {user_choice}\nComputer chose: {computer_choice}\nResult: {result}")  
        self.update_score(result)  
        self.play_again_button.config(state='normal')  

    def determine_winner(self, user_choice, computer_choice):  
        if user_choice == computer_choice:  
            return "It's a tie!"  
        elif (user_choice == "rock" and computer_choice == "scissors") or \
             (user_choice == "scissors" and computer_choice == "paper") or \
             (user_choice == "paper" and computer_choice == "rock"):  
            return "You win!"  
        else:  
            return "You lose!"  

    def update_score(self, result):  
        if "win" in result:  
            self.user_score += 1  
        elif "lose" in result:  
            self.computer_score += 1  

        self.score_label.config(text=f"User Score: {self.user_score}   Computer Score: {self.computer_score}")  

    def reset_game(self):  
        self.user_score = 0  
        self.computer_score = 0  
        self.score_label.config(text="User Score: 0   Computer Score: 0")  
        self.result_label.config(text="")  
        self.play_again_button.config(state='disabled')  


# Main execution  
if __name__ == "__main__":  
    root = tk.Tk()  
    app = RPSGame(root)  
    root.mainloop()
